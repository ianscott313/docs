{
  "openapi": "3.0.1",
  "info": {
    "title": "Brandblast API",
    "description": "A user management API for white labels",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
    "servers": [
    {
      "url": "https://dashboard.brandblast.ai/api"
    }
  ],
  "tags": [
    {
      "name": "User Management",
      "description": "APIs for managing users"
    }
  ],
  "paths": {
    "/v1/createUser": {
      "post": {
        "tags": ["User Management"],
        "operationId": "createUser",
        "summary": "Create a new user",
        "description": "Create a new user on your white label tool. This does not notify the new user in any way.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user_email", "user_password"],
                "properties": {
                  "user_email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the new user"
                  },
                  "user_password": {
                    "type": "string",
                    "description": "Password for the new user account"
                  },
                  "should_reset_password": {
                    "type": "string",
                    "enum": ["true", "false"],
                    "default": "false",
                    "description": "Flag to indicate if the user should reset their password upon login. Defaults to false."
                  }
                }
              },
              "example": {
                "user_email": "newuser@example.com",
                "user_password": "securePassword123",
                "should_reset_password": "false"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_email": {
                      "type": "string"
                    },
                    "user_password": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "user_email": "newuser@example.com",
                  "user_password": "securePassword123"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "user_email is missing"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Unauthorized: Invalid or unauthorized API key."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - no white label user found for API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "No white label user found for api key"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Failed to create user"
                }
              }
            }
          }
        }
      }
    },
    "/v1/deleteUser": {
      "post": {
        "tags": ["User Management"],
        "operationId": "deleteUser",
        "summary": "Delete a user",
        "description": "Delete a user from your white label tool. This does not notify the user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user_email"],
                "properties": {
                  "user_email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the user to be deleted"
                  }
                }
              },
              "example": {
                "user_email": "userToDelete@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "User and all associated data deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Missing required parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Unauthorized: Invalid or unauthorized API key."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - unauthorized operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Unauthorized: Cannot delete a white label user."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Failed to delete user and associated data."
                }
              }
            }
          }
        }
      }
    },
    "/v1/resetUserPassword": {
      "post": {
        "tags": ["User Management"],
        "operationId": "resetUserPassword",
        "summary": "Reset user password",
        "description": "Reset the password for a specified user. This does not notify the user in any way.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user_email", "new_password"],
                "properties": {
                  "user_email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the user whose password is to be reset"
                  },
                  "new_password": {
                    "type": "string",
                    "description": "New password for the user"
                  }
                }
              },
              "example": {
                "user_email": "user@example.com",
                "new_password": "newSecurePassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Password reset successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Missing required parameters."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Unauthorized: Invalid or unauthorized API key."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - unauthorized operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Unauthorized: Cannot reset password for a white label user."
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "User not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Failed to reset password."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}